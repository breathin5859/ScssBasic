@mixin a11y-hidden {
  overflow: hidden;
  position: absolute;
  border: 0;
  width: 1px;
  height: 1px;
  clip: rect(1px, 1px, 1px, 1px);
}

@mixin triangle($direction, $size, $color) {
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
  border-width: math.div($size, 2); // 내장함수.나누기
  // 내장함수 쓰기위해선 맨위에 @use "sass:math"; 써줘야함

  @if $direction == "up" or $direction == "u" {
    border-bottom-color: $color;
  } @else if $direction == "down" or $direction == "d" {
    border-top-color: $color;
  } @else if $direction == "right" or $direction == "r" {
    border-left-color: $color;
  } @else if $direction == "left" or $direction == "l" {
    border-right-color: $color;
  }
}

@mixin position($xValue, $yValue) {
  position: absolute;
  left: $xValue;
  top: $yValue;

  @if $xValue == 50% and $yValue == 50% {
    transform: translateX(-50%);
  } @else if $yValue == 50% {
    transform: translateY(-50%);
  } @else if $xVlue == 50% {
    transform: translate(-50%, -50%);
  }
}

// bacground
@mixin background($fileName, $coordinate) {
  background: url(#{$imageUrl}#{$fileName}) no-repeat $coordinate;
}

// text
@mixin text($color, $fontSize, $fontWeight, $lineHeight, $letterSpacing) {
  color: $color;
  font-size: $fontSize;
  font-weight: $fontWeight;
  line-height: $lineHeight;
  letter-spacing: $letterSpacing;
}

// border
@mixin border($line: rem(1), $color: #f1f1f1) {
  border: $line solid $color;
}
@mixin borderTop($line: rem(1), $color: #f1f1f1) {
  border-top: $line solid $color;
}
@mixin borderBottom($line: rem(1), $color: #f1f1f1) {
  border-bottom: $line solid $color;
}
@mixin borderLeft($line: rem(1), $color: #f1f1f1) {
  border-left: $line solid $color;
}
@mixin borderRight($line: rem(1), $color: #f1f1f1) {
  border-right: $line solid $color;
}

@mixin icon($size, $size2, $circle: fales) {
  width: $size;
  height: $size2;
  @if $circle {
    border-radius: 1000px;
  }
}

@mixin ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
